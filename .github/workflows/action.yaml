name: Package Deployment

on:
  workflow_dispatch:
    inputs:
      package-manager:
        type: choice
        description: 'Artifact type (rpm/deb)'
        options:
          - rpm
          - deb
        required: true
      environment:
        type: choice
        description: 'Environment'
        options:
          - prod
          - nonprod
        required: true

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - id: create-matrix
        run: |
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            if [ "${{ github.event.inputs.package-manager }}" == "deb" ]; then
              MATRIX_JSON='{"os": ["ubuntu-20.04"], "package-manager": ["deb"], "region": ["us-west-2", "us-east-1", "eu-east-2"], "include": [{"os":"ubuntu-20.04","package-manager":"deb","region":"us-west-2"},{"os":"ubuntu-20.04","package-manager":"deb","region":"us-east-1"},{"os":"ubuntu-20.04","package-manager":"deb","region":"eu-east-2"}]}'
            elif [ "${{ github.event.inputs.package-manager }}" == "rpm" ]; then
              MATRIX_JSON='{"os": ["ubuntu-22.04"], "package-manager": ["rpm"], "region": ["us-west-2", "us-east-1", "eu-east-2"], "include": [{"os":"ubuntu-22.04","package-manager":"rpm","region":"us-west-2"},{"os":"ubuntu-22.04","package-manager":"rpm","region":"us-east-1"},{"os":"ubuntu-22.04","package-manager":"rpm","region":"eu-east-2"}]}'
            fi
          else
            if [ "${{ github.event.inputs.package-manager }}" == "deb" ]; then
              MATRIX_JSON='{"os": ["ubuntu-20.04"], "package-manager": ["deb"], "region": ["us-west-2", "us-east-1"], "include": [{"os":"ubuntu-20.04","package-manager":"deb","region":"us-west-2"},{"os":"ubuntu-20.04","package-manager":"deb","region":"us-east-1"}]}'
            elif [ "${{ github.event.inputs.package-manager }}" == "rpm" ]; then
              MATRIX_JSON='{"os": ["ubuntu-22.04"], "package-manager": ["rpm"], "region": ["us-west-2", "us-east-1"], "include": [{"os":"ubuntu-22.04","package-manager":"rpm","region":"us-west-2"},{"os":"ubuntu-22.04","package-manager":"rpm","region":"us-east-1"}]}'
            fi
          fi
          echo "matrix=${MATRIX_JSON}" >> $GITHUB_ENV
          echo "::set-output name=matrix::${MATRIX_JSON}"

  deploy:
    needs: setup-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: print matrix
        run: |
          echo "Operating System: ${{ matrix.os }}"
          echo "Package Manager: ${{ matrix.package-manager }}"
          echo "Region: ${{ matrix.region }}"
